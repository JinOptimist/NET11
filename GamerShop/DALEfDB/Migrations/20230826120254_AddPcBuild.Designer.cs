// <auto-generated />
using System;
using DALEfDB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DALEfDB.Migrations
{
    [DbContext(typeof(WebContext))]
    [Migration("20230826120254_AddPcBuild")]
    partial class AddPcBuild
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BuildGpu", b =>
                {
                    b.Property<int>("BuildsId")
                        .HasColumnType("int");

                    b.Property<int>("GpusId")
                        .HasColumnType("int");

                    b.HasKey("BuildsId", "GpusId");

                    b.HasIndex("GpusId");

                    b.ToTable("BuildGpu");
                });

            modelBuilder.Entity("BuildHdd", b =>
                {
                    b.Property<int>("BuildsId")
                        .HasColumnType("int");

                    b.Property<int>("HddsId")
                        .HasColumnType("int");

                    b.HasKey("BuildsId", "HddsId");

                    b.HasIndex("HddsId");

                    b.ToTable("BuildHdd");
                });

            modelBuilder.Entity("BuildRam", b =>
                {
                    b.Property<int>("BuildsId")
                        .HasColumnType("int");

                    b.Property<int>("RamsId")
                        .HasColumnType("int");

                    b.HasKey("BuildsId", "RamsId");

                    b.HasIndex("RamsId");

                    b.ToTable("BuildRam");
                });

            modelBuilder.Entity("BuildSsd", b =>
                {
                    b.Property<int>("BuildsId")
                        .HasColumnType("int");

                    b.Property<int>("SsdsId")
                        .HasColumnType("int");

                    b.HasKey("BuildsId", "SsdsId");

                    b.HasIndex("SsdsId");

                    b.ToTable("BuildSsd");
                });

            modelBuilder.Entity("BuildUser", b =>
                {
                    b.Property<int>("LikedBuildsId")
                        .HasColumnType("int");

                    b.Property<int>("UsersWhoLikeItId")
                        .HasColumnType("int");

                    b.HasKey("LikedBuildsId", "UsersWhoLikeItId");

                    b.HasIndex("UsersWhoLikeItId");

                    b.ToTable("BuildUser");
                });

            modelBuilder.Entity("DALInterfaces.Models.FootballClub", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Creator")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stadium")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FootballClubs");
                });

            modelBuilder.Entity("DALInterfaces.Models.Hero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Bone")
                        .HasColumnType("int");

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Races")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subrace")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Оrigin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Heros");
                });

            modelBuilder.Entity("DALInterfaces.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("DALInterfaces.Models.PcBuild.Build", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CaseId")
                        .HasColumnType("int");

                    b.Property<int>("CoolerId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfCreate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsPrivate")
                        .HasColumnType("bit");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MotherboardId")
                        .HasColumnType("int");

                    b.Property<string>("PasswordForViewing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotosPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProcessorId")
                        .HasColumnType("int");

                    b.Property<int>("PsuId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<bool>("isVirtual")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CaseId");

                    b.HasIndex("CoolerId");

                    b.HasIndex("CreatorId");

                    b.HasIndex("MotherboardId");

                    b.HasIndex("ProcessorId");

                    b.HasIndex("PsuId");

                    b.ToTable("Builds");
                });

            modelBuilder.Entity("DALInterfaces.Models.PcBuild.Case", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxCpuCollerHeight")
                        .HasColumnType("int");

                    b.Property<int?>("MaxGpuLength")
                        .HasColumnType("int");

                    b.Property<string>("MaxMotherboardSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxPsuLength")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModelGroupe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("ProductionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cases");
                });

            modelBuilder.Entity("DALInterfaces.Models.PcBuild.Cooler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DissipatedPower")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Height")
                        .HasColumnType("int");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModelGroupe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("ProductionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Socket")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Coolers");
                });

            modelBuilder.Entity("DALInterfaces.Models.PcBuild.Gpu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float?>("BaseFrequency")
                        .HasColumnType("real");

                    b.Property<string>("Chip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DirectXSupport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("MaxFrequency")
                        .HasColumnType("real");

                    b.Property<int?>("MemoryBusWidth")
                        .HasColumnType("int");

                    b.Property<string>("MemoryType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModelGroupe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PciExpressVersion")
                        .HasColumnType("int");

                    b.Property<string>("PowerConnectors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PowerConsumption")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("ProductionDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RecommendedPsuPowerConsumption")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Gpus");
                });

            modelBuilder.Entity("DALInterfaces.Models.PcBuild.Hdd", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormFactor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Interface")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModelGroupe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("ProductionDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ReadingSpeed")
                        .HasColumnType("int");

                    b.Property<int?>("WritingSpeed")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Hddss");
                });

            modelBuilder.Entity("DALInterfaces.Models.PcBuild.Motherboard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Chipset")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormFactor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("M2SlotsCount")
                        .HasColumnType("int");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxMemoryCapacity")
                        .HasColumnType("int");

                    b.Property<int?>("MemorySlotsCount")
                        .HasColumnType("int");

                    b.Property<string>("MemoryType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModelGroupe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PciExVersion")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProcessorType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ProductionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Socket")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Motherboards");
                });

            modelBuilder.Entity("DALInterfaces.Models.PcBuild.Processor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float?>("BaseFrequency")
                        .HasColumnType("real");

                    b.Property<int?>("CoreCount")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("MaxFrequency")
                        .HasColumnType("real");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModelGroupe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PciExVersion")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("ProductionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RamSupporting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Socket")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Tdp")
                        .HasColumnType("int");

                    b.Property<int?>("TechProcess")
                        .HasColumnType("int");

                    b.Property<int?>("ThreadsCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Processors");
                });

            modelBuilder.Entity("DALInterfaces.Models.PcBuild.Psu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormFactor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModelGroupe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Power")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("ProductionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Psus");
                });

            modelBuilder.Entity("DALInterfaces.Models.PcBuild.Ram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Frequency")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KitCapacity")
                        .HasColumnType("int");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModelGroupe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModuleCapacity")
                        .HasColumnType("int");

                    b.Property<int?>("ModuleCount")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("ProductionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rams");
                });

            modelBuilder.Entity("DALInterfaces.Models.PcBuild.Ssd", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormFactor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Interface")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModelGroupe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("ProductionDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ReadingSpeed")
                        .HasColumnType("int");

                    b.Property<int?>("Size")
                        .HasColumnType("int");

                    b.Property<int?>("WritingSpeed")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Ssds");
                });

            modelBuilder.Entity("DALInterfaces.Models.RockMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatorId")
                        .HasColumnType("int");

                    b.Property<int>("EntryYear")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YearOfBirth")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RockMembers");
                });

            modelBuilder.Entity("DALInterfaces.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FavoriteMovieId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FavoriteMovieId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BuildGpu", b =>
                {
                    b.HasOne("DALInterfaces.Models.PcBuild.Build", null)
                        .WithMany()
                        .HasForeignKey("BuildsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DALInterfaces.Models.PcBuild.Gpu", null)
                        .WithMany()
                        .HasForeignKey("GpusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BuildHdd", b =>
                {
                    b.HasOne("DALInterfaces.Models.PcBuild.Build", null)
                        .WithMany()
                        .HasForeignKey("BuildsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DALInterfaces.Models.PcBuild.Hdd", null)
                        .WithMany()
                        .HasForeignKey("HddsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BuildRam", b =>
                {
                    b.HasOne("DALInterfaces.Models.PcBuild.Build", null)
                        .WithMany()
                        .HasForeignKey("BuildsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DALInterfaces.Models.PcBuild.Ram", null)
                        .WithMany()
                        .HasForeignKey("RamsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BuildSsd", b =>
                {
                    b.HasOne("DALInterfaces.Models.PcBuild.Build", null)
                        .WithMany()
                        .HasForeignKey("BuildsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DALInterfaces.Models.PcBuild.Ssd", null)
                        .WithMany()
                        .HasForeignKey("SsdsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BuildUser", b =>
                {
                    b.HasOne("DALInterfaces.Models.PcBuild.Build", null)
                        .WithMany()
                        .HasForeignKey("LikedBuildsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DALInterfaces.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersWhoLikeItId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DALInterfaces.Models.PcBuild.Build", b =>
                {
                    b.HasOne("DALInterfaces.Models.PcBuild.Case", "Case")
                        .WithMany("Builds")
                        .HasForeignKey("CaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DALInterfaces.Models.PcBuild.Cooler", "Cooler")
                        .WithMany("Builds")
                        .HasForeignKey("CoolerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DALInterfaces.Models.User", "Creator")
                        .WithMany("CreatedBuilds")
                        .HasForeignKey("CreatorId");

                    b.HasOne("DALInterfaces.Models.PcBuild.Motherboard", "Motherboard")
                        .WithMany("Builds")
                        .HasForeignKey("MotherboardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DALInterfaces.Models.PcBuild.Processor", "Processor")
                        .WithMany("Builds")
                        .HasForeignKey("ProcessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DALInterfaces.Models.PcBuild.Psu", "Psu")
                        .WithMany("Builds")
                        .HasForeignKey("PsuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Case");

                    b.Navigation("Cooler");

                    b.Navigation("Creator");

                    b.Navigation("Motherboard");

                    b.Navigation("Processor");

                    b.Navigation("Psu");
                });

            modelBuilder.Entity("DALInterfaces.Models.User", b =>
                {
                    b.HasOne("DALInterfaces.Models.Movie", "FavoriteMovie")
                        .WithMany("UsersWhoLikeIt")
                        .HasForeignKey("FavoriteMovieId");

                    b.Navigation("FavoriteMovie");
                });

            modelBuilder.Entity("DALInterfaces.Models.Movie", b =>
                {
                    b.Navigation("UsersWhoLikeIt");
                });

            modelBuilder.Entity("DALInterfaces.Models.PcBuild.Case", b =>
                {
                    b.Navigation("Builds");
                });

            modelBuilder.Entity("DALInterfaces.Models.PcBuild.Cooler", b =>
                {
                    b.Navigation("Builds");
                });

            modelBuilder.Entity("DALInterfaces.Models.PcBuild.Motherboard", b =>
                {
                    b.Navigation("Builds");
                });

            modelBuilder.Entity("DALInterfaces.Models.PcBuild.Processor", b =>
                {
                    b.Navigation("Builds");
                });

            modelBuilder.Entity("DALInterfaces.Models.PcBuild.Psu", b =>
                {
                    b.Navigation("Builds");
                });

            modelBuilder.Entity("DALInterfaces.Models.User", b =>
                {
                    b.Navigation("CreatedBuilds");
                });
#pragma warning restore 612, 618
        }
    }
}
